version: "3.8"

networks:
  server: # web_server
  cache: # redis
  database: # postgres
    driver: bridge

services:
  web_client:
    build:
      context: ./kaybot
      dockerfile: Dockerfile.development
    container_name: kaybot_client
    expose:
      - ${CLIENT_PORT}
      - 9339 # debug
      - 49153 # webpack hot reload
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
      - 9339:9339
      - 49153:49153
    entrypoint: "yarn dev -p $CLIENT_PORT"
    depends_on:
      - web_server
    networks:
      - server
    volumes:
      - "./kaybot:${CLIENT_WORKDIR}"
      - "./kaybot/node_modules:${CLIENT_WORKDIR}/node_modules"
    environment:
      - APP_NAME=${APP_NAME} # the application name
      - PORT=${CLIENT_PORT} # Assign $CLIENT_PORT to $PORT env var in web_client

      # HTTP requests between host machine and server container will be done on this address
      - SERVER_BASE_URL=http://localhost:${PORT} # $PORT here is web_server container port

      # HTTP requests between client and server containers will be done on this address
      - SERVER_INTERNAL_ADDRESS=http://kaybot_server:${PORT}
    restart: unless-stopped

  web_server:
    build:
      context: ./kaybot-services
      dockerfile: Dockerfile
    container_name: kaybot_server
    ports:
      - ${PORT}:${PORT}
    command: "uvicorn main:app --host='0.0.0.0' --port=${PORT} --reload"
    networks:
      - server
      - cache
      - database
    volumes:
      - "./kaybot-services:${SERVER_WORKDIR}"
    depends_on:
      - redis
      - postgres
    environment:
      - APP_NAME=${APP_NAME} # the application name
      - APP_DESC=${APP_DESC} # a short description of the application
      - CLIENT_ADDRESSES=${CLIENT_ADDRESSES} # CSV list of hosts to whitelist for CORS
      - POSTGRES_HOST=kaybot_services_postgres # the container name of the database container
      - POSTGRES_PORT=${POSTGRES_PORT} # the port on which to communicate with the database
      - POSTGRES_USER=${POSTGRES_USER} # the database user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} # the database password
      - REDIS_URL=redis://kaybot_services_cache:6380 # the name of the redis container as hostname
    restart: unless-stopped

  redis:
    image: "redis:alpine"
    container_name: kaybot_services_cache
    expose:
      - 6379
    ports:
      - 6380:6379
    networks:
      - cache
    restart: unless-stopped

  postgres:
    container_name: kaybot_services_postgres
    image: postgres:15.4-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./create_database.sh:/docker-entrypoint-initdb.d/create_database.sh
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - database
    restart: unless-stopped

  pgadmin:
    container_name: kaybot_services_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5051:80"
    networks:
      - database
    restart: unless-stopped

volumes:
  node_modules:
  postgres:
  pgadmin:
