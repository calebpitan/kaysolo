"""create inital tables

Revision ID: 3c94db41da7c
Revises: 
Create Date: 2023-08-16 17:04:30.572047

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3c94db41da7c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('username', postgresql.CITEXT(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('IDX_User_username_UNIQUE', 'user', ['username'], unique=True, postgresql_where=sa.text('deleted_at IS NULL'))
    op.create_index(op.f('ix_user_created_at'), 'user', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_deleted_at'), 'user', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_updated_at'), 'user', ['updated_at'], unique=False)
    op.create_table('account',
    sa.Column('email', postgresql.CITEXT(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('active_at', sa.DateTime(), nullable=False),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('IDX_Account_email_UNIQUE', 'account', ['email'], unique=True, postgresql_where=sa.text('deleted_at IS NULL'))
    op.create_index(op.f('ix_account_created_at'), 'account', ['created_at'], unique=False)
    op.create_index(op.f('ix_account_deleted_at'), 'account', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_account_id'), 'account', ['id'], unique=False)
    op.create_index(op.f('ix_account_updated_at'), 'account', ['updated_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_account_updated_at'), table_name='account')
    op.drop_index(op.f('ix_account_id'), table_name='account')
    op.drop_index(op.f('ix_account_deleted_at'), table_name='account')
    op.drop_index(op.f('ix_account_created_at'), table_name='account')
    op.drop_index('IDX_Account_email_UNIQUE', table_name='account', postgresql_where=sa.text('deleted_at IS NULL'))
    op.drop_table('account')
    op.drop_index(op.f('ix_user_updated_at'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_deleted_at'), table_name='user')
    op.drop_index(op.f('ix_user_created_at'), table_name='user')
    op.drop_index('IDX_User_username_UNIQUE', table_name='user', postgresql_where=sa.text('deleted_at IS NULL'))
    op.drop_table('user')
    # ### end Alembic commands ###
